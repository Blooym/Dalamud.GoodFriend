name: "Plugin Changes"

on:
  push:
    branches: ["main"]
    paths:
      - "src/Plugin/**.cs"
      - "src/Plugin/*.csproj"
      - "src/Plugin/packages.lock.json"
  pull_request:
    branches: ["main"]
    paths:
      - "src/Plugin/**.cs"
      - "src/Plugin/*.csproj"
      - "src/Plugin/packages.lock.json"
    types: [ready_for_review, opened, synchronize]
  workflow_dispatch:

jobs:
  Test:
    if: github.event.pull_request.draft == false || github.event_name == 'push'
    runs-on: ubuntu-latest
    defaults:
        run:
          working-directory: ./src/Plugin/
    strategy:
        matrix:
          dotnet-version: [7.0.x]
          dalamud-branch: ["release", "stg"]
    env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
    steps:
      - name: GitHub Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Cache Nuget Packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
            dotnet-version: ${{ matrix.dotnet-version }}

      - name: Setup Dalamud
        uses: Blooym/setup-dalamud@v1
        with:
          branch: ${{ matrix.dalamud-branch }}
        
      - name: Restore Nuget Packages
        run: dotnet restore

      - name: Build Plugin
        env:
          PLOGON_SECRET_CLIENT_KEY: CI-${{ github.sha }}
        run: dotnet build --no-restore --nologo

      - name: Check for Lint Errors
        id: lint
        continue-on-error: true
        run: | 
          dotnet format --verify-no-changes > lint.txt 2>&1

      - name: Report Lint Errors
        if : steps.lint.outcome == 'failure'
        run: |
          cat lint.txt | sed -E 's/^(.*)$/::warning:: \1/g'

      - name: Run Tests
        run: dotnet test --no-restore --no-build --verbosity normal
