name: "Release"

on:
  push:
    tags:
      - "v*.*.*.*"

permissions:
  contents: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  Plugin:
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_VERSION: 7.0.x
      DALAMUD_HOME: "/tmp/"
    defaults:
      run:
        working-directory: ./src/Plugin/
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Get Tag Name
        run: echo "tag=$(echo ${{ github.ref }} | sed 's/refs\/tags\///' | sed 's/v//')" >> $GITHUB_ENV

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Download Dalamud
        run: |
          wget https://goatcorp.github.io/dalamud-distrib/latest.zip -O /tmp/dalamud.zip
          unzip /tmp/dalamud.zip -d ${{ env.DALAMUD_HOME }}

      - name: Cache Nuget Packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore Nuget Packages
        run: dotnet restore

      - name: Build Plugin
        run: |
          dotnet build --configuration Release --nologo -p:AssemblyVersion=${{ env.tag }}
          sha512sum bin/Release/GoodFriend.dll > checksums.txt
          sha512sum bin/Release/GoodFriend.Client.dll >> checksums.txt
          sha512sum bin/Release/Sirensong.dll >> checksums.txt
          cat checksums.txt

      - name: Release
        uses: softprops/action-gh-release@975c1b265e11dd76618af1c374e7981f9a6ff44a
        with:
          generate_release_notes: true
          prerelease: false
          files: |
            src/Plugin/bin/Release/GoodFriend/latest.zip
            src/Plugin/checksums.txt

  Api:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true

      - name: Extract Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Publish Image
        uses: docker/build-push-action@v5
        with:
          file: ./src/Api/Dockerfile
          context: ./src/Api/
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
