{
  "Event.Connection.Status": {
    "message": "接続状態",
    "description": "Events.get_APIConnectionStatus"
  },
  "Event.Connection.Successful": {
    "message": "APIへの接続に成功しました",
    "description": "Events.get_APIConnectionSuccess"
  },
  "Event.Connection.Error": {
    "message": "APIへの接続中にエラーが発生しました。",
    "description": "Events.get_APIConnectionError"
  },
  "Event.Connection.Disconnected": {
    "message": "APIから切断しました。",
    "description": "Events.get_APIConnectionDisconnected"
  },
  "Event.Connection.Ratelimited": {
    "message": "APIの上限を超えました。自動的に再接続されます。",
    "description": "Events.get_APIConnectionRatelimited"
  },
  "Event.LoggedIn": {
    "message": "ログインしました。",
    "description": "Events.get_LoggedIn"
  },
  "Event.LoggedOut": {
    "message": "ログアウトしました。",
    "description": "Events.get_LoggedOut"
  },
  "State.Connected": {
    "message": "接続済み",
    "description": "State.get_Connected"
  },
  "State.Connected.Description": {
    "message": "現在接続中のクライアントは {0} 人です。",
    "description": "State.ConnectedDescription"
  },
  "State.Connecting": {
    "message": "接続中",
    "description": "State.get_Connecting"
  },
  "State.Connecting.Description": {
    "message": "接続中です。しばらくお待ちください。",
    "description": "State.get_ConnectingDescription"
  },
  "State.Ratelimited": {
    "message": "レート上限",
    "description": "State.get_Ratelimited"
  },
  "State.Ratelimited.Description": {
    "message": "APIはこのクライアントを一時的に制限しています。",
    "description": "State.get_RatelimitedDescription"
  },
  "State.Disconnected": {
    "message": "切断",
    "description": "State.get_Disconnected"
  },
  "State.Disconnected.Description": {
    "message": "ログインしてAPIに接続します。",
    "description": "State.get_DisconnectedDescription"
  },
  "State.ConnectionError": {
    "message": "接続エラー",
    "description": "State.get_ConnectionError"
  },
  "State.ConnectionError.Description": {
    "message": "API接続に問題が発生しました。",
    "description": "State.get_ConnectionErrorDescription"
  },
  "State.Unknown": {
    "message": "不明",
    "description": "State.get_Unknown"
  },
  "State.Unknown.Description": {
    "message": "不明なエラーが発生しています",
    "description": "State.get_UnknownDescription"
  },
  "Window.Dropdown.Options.Status": {
    "message": "稼働状況(Web)",
    "description": "PrimaryWindow.get_DropdownOptionsStatus"
  },
  "Window.Dropdown.Options.Status.Tooltip": {
    "message": "この API インスタンスのステータスページを表示します。\n({0})",
    "description": "PrimaryWindow.DropdownOptionsStatusTooltip"
  },
  "Window.Dropdown.Options.Support": {
    "message": "寄付",
    "description": "PrimaryWindow.get_DropdownOptionsSupport"
  },
  "Window.Dropdown.Options.Support.Tooltip": {
    "message": "開発者とAPIインスタンスホストをサポートします。",
    "description": "PrimaryWindow.get_DropdownOptionsSupportTooltip"
  },
  "Window.Dropdown.Options.EventLog": {
    "message": "イベントログ",
    "description": "PrimaryWindow.get_DropdownOptionsEventLog"
  },
  "Window.Dropdown.Options.EventLog.Tooltip": {
    "message": "イベントログを表示。",
    "description": "PrimaryWindow.get_DropdownOptionsEventLogTooltip"
  },
  "Window.Dropdown.Options.Settings": {
    "message": "設定",
    "description": "PrimaryWindow.get_DropdownOptionsSettings"
  },
  "Window.Dropdown.Options.Settings.Tooltip": {
    "message": "プラグインの設定を変更します。",
    "description": "PrimaryWindow.get_DropdownOptionsSettingsTooltip"
  },
  "Window.Dropdown.Settings.Enabled": {
    "message": "有効",
    "description": "PrimaryWindow.get_DropdownSettingsEnabled"
  },
  "Window.Dropdown.Settings.Disabled": {
    "message": "無効",
    "description": "PrimaryWindow.get_DropdownSettingsDisabled"
  },
  "Window.Dropdown.Settings.RestartRequired": {
    "message": "一部の設定変更を適用するには、プラグインの再起動が必要です。",
    "description": "PrimaryWindow.get_DropdownSettingsRestartRequired"
  },
  "Window.Dropdown.Settings.IgnoreFC": {
    "message": "FCメンバーを除外",
    "description": "PrimaryWindow.get_DropdownSettingsIgnoreFC"
  },
  "Window.Dropdown.Settings.IgnoreFC.Tooltip": {
    "message": "FCに所属するプレイヤーからの通知は、自分のホームワールド以外のインスタンスやワールドでは機能しない場合があります。",
    "description": "PrimaryWindow.get_DropdownSettingsIgnoreFCTooltip"
  },
  "Window.Dropdown.Settings.IgnoreDiffHomeworlds": {
    "message": "Ignore Other Homeworlds",
    "description": "PrimaryWindow.get_DropdownSettingsIgnoreDiffHomeworlds"
  },
  "Window.Dropdown.Settings.IgnoreDiffHomeworlds.Tooltip": {
    "message": "Whether or not to ignore friend notifications from player characters who have a different homeworld than you.",
    "description": "PrimaryWindow.get_DropdownSettingsIgnoreDiffHomeworldsTooltip"
  },
  "Window.Dropdown.Settings.IgnoreDiffWorlds": {
    "message": "Ignore Other Worlds",
    "description": "PrimaryWindow.get_DropdownSettingsIgnoreDiffWorlds"
  },
  "Window.Dropdown.Settings.IgnoreDiffWorlds.Tooltip": {
    "message": "Whether or not to ignore friend notifications from players currently in different worlds than you.",
    "description": "PrimaryWindow.get_DropdownSettingsIgnoreDiffWorldsTooltip"
  },
  "Window.Dropdown.Settings.IgnoreDiffTerritories": {
    "message": "Ignore Other Zones",
    "description": "PrimaryWindow.get_DropdownSettingsIgnoreDiffTerritories"
  },
  "Window.Dropdown.Settings.IgnoreDiffTerritories.Tooltip": {
    "message": "Whether or not to ignore friend notifications from players currently in different zones.",
    "description": "PrimaryWindow.get_DropdownSettingsIgnoreDiffTerritoriesTooltip"
  },
  "Window.Dropdown.Settings.IgnoreDiffDatacenters": {
    "message": "Ignore Other Datacenters",
    "description": "PrimaryWindow.get_DropdownSettingsIgnoreDiffDatacenters"
  },
  "Window.Dropdown.Settings.IgnoreDiffDatacenters.Tooltip": {
    "message": "Whether or not to ignore friend notifications from players currently on different datacenters.",
    "description": "PrimaryWindow.get_DropdownSettingsIgnoreDiffDatacentersTooltip"
  },
  "Window.Dropdown.Settings.NotificationType": {
    "message": "Notification Type",
    "description": "PrimaryWindow.get_DropdownSettingsNotificationType"
  },
  "Window.Dropdown.Settings.NotificationType.Tooltip": {
    "message": "The type of notification to show when a friend event occurs.",
    "description": "PrimaryWindow.get_DropdownSettingsNotificationTypeTooltip"
  },
  "Window.Dropdown.Settings.LoginMessage": {
    "message": "Login Message",
    "description": "PrimaryWindow.get_DropdownSettingsLoginMessage"
  },
  "Window.Dropdown.Settings.LoginMessage.Tooltip": {
    "message": "The message to show when a friend logs in.\nMessage must contain {0} at least once to insert the friend's name.",
    "description": "PrimaryWindow.get_DropdownSettingsLoginMessageTooltip"
  },
  "Window.Dropdown.Settings.InvalidLoginMessage": {
    "message": "The login message must contain {0} at least once to insert the friend's name.",
    "description": "PrimaryWindow.get_DropdownInvalidLoginMessage"
  },
  "Window.Dropdown.Settings.LogoutMessage": {
    "message": "Logout Message",
    "description": "PrimaryWindow.get_DropdownSettingsLogoutMessage"
  },
  "Window.Dropdown.Settings.LogoutMessage.Tooltip": {
    "message": "The message to show when a friend logs out.\nMessage must contain {0} at least once to insert the friend's name.",
    "description": "PrimaryWindow.get_DropdownSettingsLogoutMessageTooltip"
  },
  "Window.Dropdown.Settings.InvalidLogoutMessage": {
    "message": "The logout message must contain {0} at least once to insert the friend's name.",
    "description": "PrimaryWindow.get_DropdownInvalidLogoutMessage"
  },
  "Window.Dropdown.Settings.APINotifications": {
    "message": "API Notifications",
    "description": "PrimaryWindow.get_DropdownSettingsAPINotifications"
  },
  "Window.Dropdown.Settings.APINotifications.Tooltip": {
    "message": "Whether or not to notifications when the API connection status changes, this is not related to friend notifications.",
    "description": "PrimaryWindow.get_DropdownSettingsAPINotificationsTooltip"
  },
  "Window.Dropdown.Settings.FriendshipCode": {
    "message": "Friendship Code",
    "description": "PrimaryWindow.get_DropdownSettingsFriendshipCode"
  },
  "Window.Dropdown.Settings.FriendshipCode.Tooltip": {
    "message": "Your friendship code limits who you send notifications to.\nYou will only send and receive notifications with people who have the same code.\n\nLeave empty for the best experience.",
    "description": "PrimaryWindow.get_DropdownSettingsFriendshipCodeTooltip"
  },
  "Window.Dropdown.Settings.APIUrl": {
    "message": "API URL",
    "description": "PrimaryWindow.get_DropdownSettingsAPIUrl"
  },
  "Window.Dropdown.Settings.APIUrl.Tooltip": {
    "message": "The URL of the API instance to connect to. You should trust the host of this instance before connecting to it.",
    "description": "PrimaryWindow.get_DropdownSettingsAPIUrlTooltip"
  },
  "Window.Dropdown.Settings.APIUrlInvalid": {
    "message": "The API URL is invalid, please double check it contains the protocol (http:// or https://) and the port (if applicable).",
    "description": "PrimaryWindow.get_DropdownSettingsAPIUrlInvalid"
  },
  "Window.Dropdown.Settings.APIToken": {
    "message": "API Token",
    "description": "PrimaryWindow.get_DropdownSettingsAPIToken"
  },
  "Window.Dropdown.Settings.APIToken.Tooltip": {
    "message": "Sets the 'Authorization' header value to send with all requests to the API.\nYou will need to include the authorization scheme (eg. bearer, basic) before the value.\nThe API instance will be able to see this value, never set it to sensitive information like your login password.",
    "description": "PrimaryWindow.get_DropdownSettingsAPITokenTooltip"
  },
  "Window.Dropdown.Settings.SaltMethod": {
    "message": "Salt Method",
    "description": "PrimaryWindow.get_DropdownSettingsSaltMethod"
  },
  "Window.Dropdown.Settings.SaltMethod.Tooltip": {
    "message": "Strict: Validation is done using both Friend Code & Plugin Manifest (Users must be using the same plugin, version & build to exchange events)\nRelaxed: Validation is only done using Friend Code (Users can exchange events from any source using the same API)\n\nKeep this on strict unless you have reason to change it.",
    "description": "PrimaryWindow.get_DropdownSettingsSaltMethodTooltip"
  },
  "Window.Dropdown.Settings.FriendslistCaching": {
    "message": "Friendslist Caching",
    "description": "PrimaryWindow.get_DropdownSettingsFriendslistCaching"
  },
  "Window.Dropdown.Settings.FriendslistCaching.Tooltip": {
    "message": "Whether or not to cache the friends list to show notifications when it is unavailable (eg. inside of instanced content).\nDisable to not show notifications when the friends list is unavailable.\n\nNote: When enabling this setting, the cache will not be updated until the next time the friends list is available.",
    "description": "PrimaryWindow.get_DropdownSettingsFriendslistCachingTooltip"
  },
  "Window.Dropdown.Support.Title": {
    "message": "Support & Donations",
    "description": "PrimaryWindow.get_DropdownSupportTitle"
  },
  "Window.Dropdown.Support.FlavourText": {
    "message": "You can find ways to support either the plugin developer or API host here. Any support is greatly appreciated!",
    "description": "PrimaryWindow.get_DropdownSupportFlavourText"
  },
  "Window.Dropdown.Support.Button": {
    "message": "寄付",
    "description": "PrimaryWindow.get_DropdownSupportDonate"
  },
  "Window.Dropdown.Support.Developer": {
    "message": "Plugin/Server Developer",
    "description": "PrimaryWindow.get_DropdownSupportDeveloper"
  },
  "Window.Dropdown.Support.Developer.Description": {
    "message": "The developer is responsible for the code that makes the Plugin and API work.",
    "description": "PrimaryWindow.get_DropdownSupportDeveloperDescription"
  },
  "Window.Dropdown.Support.APIHost": {
    "message": "API Instance Host",
    "description": "PrimaryWindow.get_DropdownSupportAPIHost"
  },
  "Window.Dropdown.Support.APIHost.Description": {
    "message": "The API instance host is responsible for running and maintaining the server that this plugin is connected to.",
    "description": "PrimaryWindow.get_DropdownSupportAPIHostDescription"
  },
  "Window.Dropdown.Support.APIHost.InvalidUri": {
    "message": "The API instance host has provided an invalid support URL.",
    "description": "PrimaryWindow.get_DropdownSupportAPIHostInvalidUri"
  },
  "Window.Dropdown.Logs.Title": {
    "message": "Logs",
    "description": "PrimaryWindow.get_DropdownLogsTitle"
  },
  "Window.Dropdown.Logs.NoLogs": {
    "message": "No logs to display.",
    "description": "PrimaryWindow.get_DropdownLogsNoLogs"
  },
  "Window.Dropdown.Logs.ClearAll": {
    "message": "Clear All",
    "description": "PrimaryWindow.get_DropdownLogsClearAll"
  },
  "Window.Dropdown.Logs.Copy": {
    "message": "Copy",
    "description": "PrimaryWindow.get_DropdownLogsCopy"
  },
  "Window.Dropdown.Logs.FilterTooltip": {
    "message": "Set the selected log level, any logs below this level will be hidden.",
    "description": "PrimaryWindow.get_DropdownLogsFilterTooltip"
  },
  "Window.Dropdown.Logs.CopySuccess": {
    "message": "Successfully copied log to clipboard.",
    "description": "PrimaryWindow.get_DropdownLogsCopySuccess"
  },
  "Window.Dropdown.Logs.Delete": {
    "message": "Delete",
    "description": "PrimaryWindow.get_DropdownLogsDelete"
  },
  "Window.Dropdown.Logs.Table.Time": {
    "message": "Time",
    "description": "PrimaryWindow.get_DropdownLogsTableTime"
  },
  "Window.Dropdown.Logs.Table.Type": {
    "message": "Type",
    "description": "PrimaryWindow.get_DropdownLogsTableType"
  },
  "Window.Dropdown.Logs.Table.Message": {
    "message": "Message",
    "description": "PrimaryWindow.get_DropdownLogsTableMessage"
  },
  "Window.Settings.Build.Official": {
    "message": "Official Build",
    "description": "PrimaryWindow.get_SettingsOfficialBuild"
  },
  "Window.Settings.Build.Unofficial": {
    "message": "Unofficial Build",
    "description": "PrimaryWindow.get_SettingsUnofficialBuild"
  },
  "Window.Settings.Tab.General": {
    "message": "General",
    "description": "PrimaryWindow.get_SettingsTabGeneral"
  },
  "Window.Settings.Tab.Advanced": {
    "message": "Advanced",
    "description": "PrimaryWindow.get_SettingsTabAdvanced"
  },
  "Window.URLUpdateNag.Title": {
    "message": "{0} - Update from {1}",
    "description": "URLNagWindow.URLUpdateNagTitle"
  },
  "Window.URLUpdateNag.Text": {
    "message": "Your configured instance is recommending that you update to a new API URL; this is likely due to a change in the instance's domain name or hosting provider.\n\nIf you trust the new URL({0}), press the button below to update the API URL for next plugin load. Otherwise, you may want to find another instance provider.\n\nHold shift or wait {1} seconds to select an option.",
    "description": "URLNagWindow.URLUpdateNagText"
  },
  "Window.URLUpdateNag.Button.Update": {
    "message": "Update URL",
    "description": "URLNagWindow.get_URLUpdateNagButtonUpdate"
  },
  "Window.URLUpdateNag.Button.Ignore": {
    "message": "Ignore for this session",
    "description": "URLNagWindow.get_URLUpdateNagButtonIgnore"
  }
}
